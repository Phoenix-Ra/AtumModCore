buildscript {
    repositories {
        // These repositories are only for Gradle plugins, put any other repositories in the repository block further below
        maven { url = 'https://maven.minecraftforge.net' }
        maven { url = "https://repo.spongepowered.org/maven" }
        jcenter()
        mavenCentral()
        maven { url = 'https://jitpack.io' }
    }
    dependencies {
        classpath group: 'net.minecraftforge.gradle', name: 'ForgeGradle', version: '5.1.+', changing: true
        classpath 'org.spongepowered:mixingradle:0.7-SNAPSHOT'
    }
}
plugins{
    id 'java'
    id 'java-library'
    id "com.github.johnrengelman.shadow" version "7.1.0"
}

apply plugin: 'net.minecraftforge.gradle'
apply plugin: 'eclipse'
apply plugin: 'maven-publish'
apply plugin: 'org.spongepowered.mixin'\

version = mod_version
group = mod_group
archivesBaseName = mod_name

compileJava {

    sourceCompatibility = targetCompatibility = '1.8'
    [compileJava, compileTestJava]*.options*.encoding = 'UTF-8'
}

allprojects {
    apply plugin: 'net.minecraftforge.gradle'
    apply plugin: 'eclipse'
    apply plugin: 'maven-publish'
    minecraft {
        mappings channel: 'snapshot', version: '20171003-1.12'
    }

    dependencies {
        minecraft 'net.minecraftforge:forge:1.12.2-14.23.5.2855'

        compileOnly('org.spongepowered:mixin:0.8.4') {
            exclude module: 'guava'
            exclude module: 'commons-io'
            exclude module: 'gson'
        }

        //annotations
        compileOnly 'org.projectlombok:lombok:1.18.24'
        compileOnly 'org.jetbrains:annotations:23.0.0'
        annotationProcessor 'org.projectlombok:lombok:1.18.24'
        annotationProcessor 'org.jetbrains:annotations:23.0.0'
        annotationProcessor 'org.spongepowered:mixin:0.8.4:processor'
        testAnnotationProcessor 'org.spongepowered:mixin:0.8.4:processor'

        compileOnly fileTree(dir: 'libs', include: ['*.jar'])
    }
    //replace placeholders from gradle.properties
    processResources {
        filesMatching('**/*.yml') {
            project.properties.each { propertyKey, propertyValue ->
                if (propertyValue instanceof String) {
                    filter {
                        it.replace("\${${propertyKey}}", propertyValue)
                    }
                }
            }
        }
        filesMatching('**/*.json') {
            project.properties.each { propertyKey, propertyValue ->
                if (propertyValue instanceof String) {
                    filter {
                        it.replace("\${${propertyKey}}", propertyValue)
                    }
                }
            }
        }
        filesMatching('**/*.info') {
            project.properties.each { propertyKey, propertyValue ->
                if (propertyValue instanceof String) {
                    filter {
                        it.replace("\${${propertyKey}}", propertyValue)
                    }
                }
            }
        }
    }
    java{
        withSourcesJar()
    }
}


minecraft {
    mappings channel: 'snapshot', version: '20171003-1.12'
}
dependencies {
    implementation implementation(project(':atumod-api',))
    implementation implementation(project(':atumod-core',))
    implementation implementation(project(':atumod-mod',))

    minecraft 'net.minecraftforge:forge:1.12.2-14.23.5.2855'
}



mixin {
    add sourceSets.main, "fancymenu.general.mixin-refmap.json"
}


shadowJar {
    dependencies {
        exclude(dependency ->
                !dependency.moduleGroup.startsWith(mod_group)
        )
    }
    duplicatesStrategy DuplicatesStrategy.EXCLUDE //prevent duplicates
    archiveBaseName.set(mod_name)
    classifier "" //prevent creation of unshadowed jar

    //remove unsupported meta-inf staff from newer java versions
    exclude 'META-INF/versions/**'
}

reobf {
    shadowJar {
    }
}


jar {
    manifest {
        attributes "ForceLoadAsMod": "true"
        attributes "FMLCorePluginContainsFMLMod": "true"
        attributes "FMLCorePlugin": "me.phoenixra.atumodcore.mod.fml.FMLPlugin"
        attributes "TweakClass": "org.spongepowered.asm.launch.MixinTweaker"
        attributes "TweakOrder": "0"
    }
}


jar.finalizedBy('reobfJar')
